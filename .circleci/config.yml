version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.7-node-browsers
        environment:
          - BUNDLER_VERSION: 2.1.4
          - RAILS_ENV: "test"
      - image: circleci/mysql:5.5
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          - MYSQL_ROOT_HOST: "%"

    working_directory: ~/BEST

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: mv ./config/database.yml.ci ./config/database.yml

      # Database setup
      - run:
          name: Databasesetup
          command: |
            bundle exec rails db:create
            bundle exec rails db:schema:load
      # run rubocop
      - run:
          name: Rubocop -a
          command: bundle exec rubocop --require rubocop-airbnb -a
      - run:
          name: Rubocop
          command: bundle exec rubocop --require rubocop-airbnb
      # run tests
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - add_ssh_keys:
          fingerprints:
            - "53:f0:d4:7a:a0:1c:7c:22:3d:d6:33:9a:84:56:f3:81"

      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy